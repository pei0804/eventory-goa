consumes:
- application/json
- application/xml
- application/gob
- application/x-gob
definitions:
  Event:
    description: イベント情報 (default view)
    example:
      ID: 1
      accepted: 10
      apiID: ATDN
      endAt: 2016-01-01 18:00:00
      limit: 10
      place: 東京都渋谷区3-31-205
      startAt: 2016-01-01 10:10:12
      title: アジャイル開発勉強会
      url: 2016-01-01 10:10:12
      waitlisted: 5
    properties:
      ID:
        description: ID
        example: 1
        format: int64
        type: integer
      accepted:
        description: 参加登録済み人数
        example: 10
        format: int64
        type: integer
      apiID:
        description: APIの種類 enum(ATDN=1,CONNPASS=2,DOORKEEPER=3)
        example: ATDN
        type: string
      endAt:
        description: 終了日時
        example: 2016-01-01 18:00:00
        type: string
      limit:
        description: 参加人数上限
        example: 10
        format: int64
        type: integer
      place:
        description: 開催地
        example: 東京都渋谷区3-31-205
        type: string
      startAt:
        description: 開催日時
        example: 2016-01-01 10:10:12
        type: string
      title:
        description: イベント名
        example: アジャイル開発勉強会
        type: string
      url:
        description: イベントページURL
        example: 2016-01-01 10:10:12
        type: string
      waitlisted:
        description: キャンセル待ち人数
        example: 5
        format: int64
        type: integer
    required:
    - ID
    - apiID
    - title
    - url
    - limit
    - accepted
    - waitlisted
    - place
    - startAt
    title: 'Mediatype identifier: application/vnd.event+json; view=default'
    type: object
  EventCollection:
    description: EventCollection is the media type for an array of Event (default
      view)
    example:
    - ID: 1
      accepted: 10
      apiID: ATDN
      endAt: 2016-01-01 18:00:00
      limit: 10
      place: 東京都渋谷区3-31-205
      startAt: 2016-01-01 10:10:12
      title: アジャイル開発勉強会
      url: 2016-01-01 10:10:12
      waitlisted: 5
    - ID: 1
      accepted: 10
      apiID: ATDN
      endAt: 2016-01-01 18:00:00
      limit: 10
      place: 東京都渋谷区3-31-205
      startAt: 2016-01-01 10:10:12
      title: アジャイル開発勉強会
      url: 2016-01-01 10:10:12
      waitlisted: 5
    items:
      $ref: '#/definitions/Event'
    title: 'Mediatype identifier: application/vnd.event+json; type=collection; view=default'
    type: array
  Genre:
    description: ジャンル (default view)
    example:
      ID: 1
      name: javascript
    properties:
      ID:
        description: ジャンルID
        example: 1
        format: int64
        type: integer
      name:
        description: ジャンル名
        example: javascript
        type: string
    title: 'Mediatype identifier: application/vnd.genre+json; view=default'
    type: object
  GenreCollection:
    description: GenreCollection is the media type for an array of Genre (default
      view)
    example:
    - ID: 1
      name: javascript
    items:
      $ref: '#/definitions/Genre'
    title: 'Mediatype identifier: application/vnd.genre+json; type=collection; view=default'
    type: array
  error:
    description: Error response media type (default view)
    example:
      code: invalid_value
      detail: Value of ID must be an integer
      id: 3F1FKVRR
      meta:
        timestamp: 1.458609e+09
      status: "400"
    properties:
      code:
        description: an application-specific error code, expressed as a string value.
        example: invalid_value
        type: string
      detail:
        description: a human-readable explanation specific to this occurrence of the
          problem.
        example: Value of ID must be an integer
        type: string
      id:
        description: a unique identifier for this particular occurrence of the problem.
        example: 3F1FKVRR
        type: string
      meta:
        additionalProperties: true
        description: a meta object containing non-standard meta-information about
          the error.
        example:
          timestamp: 1.458609e+09
        type: object
      status:
        description: the HTTP status code applicable to this problem, expressed as
          a string value.
        example: "400"
        type: string
    title: 'Mediatype identifier: application/vnd.goa.error; view=default'
    type: object
externalDocs:
  description: eventory guide
  url: https://github.com/tikasan/eventory/wiki
host: localhost:8080
info:
  description: 'ITイベント情報集アプリAPI '
  license:
    name: MIT
    url: https://github.com/tikasan/eventory/blob/master/LICENSE
  title: 'eventory: ITイベント収集アプリ'
  version: ""
paths:
  /api/v2/event:
    get:
      description: イベント情報取得(クライントはこの処理の実行した時間を保持する)
      operationId: event#list
      parameters:
      - default: ""
        description: クライアントが最後にイベントを取得した時間(格納していない場合は空文字で処理します)
        in: query
        name: updated_at
        required: false
        type: string
      produces:
      - application/vnd.goa.error
      - application/vnd.event+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/EventCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      summary: list event
      tags:
      - event
  /api/v2/genre:
    get:
      description: all genre get
      operationId: genre#list
      parameters:
      - default: ""
        description: ジャンル名検索に使うキーワード(0~30文字)
        in: query
        maxLength: 30
        minLength: 0
        name: keyword
        required: false
        type: string
      produces:
      - application/vnd.goa.error
      - application/vnd.genre+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GenreCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      summary: list genre
      tags:
      - genre
  /api/v2/genre/new:
    post:
      description: ジャンルの新規作成
      operationId: genre#create
      parameters:
      - description: ジャンル名(1~30文字)
        in: query
        maxLength: 30
        minLength: 1
        name: name
        required: true
        type: string
      produces:
      - application/vnd.goa.error
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      summary: create genre
      tags:
      - genre
  /api/v2/user/{eventID}/keep:
    put:
      description: イベントのお気に入り操作
      operationId: user#event fav update
      parameters:
      - description: イベントID（連番）
        in: path
        name: eventID
        required: true
        type: integer
      - description: ユーザーID（連番）
        in: query
        name: userID
        required: true
        type: integer
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
      schemes:
      - http
      summary: event fav update user
      tags:
      - user
  /api/v2/user/{eventID}/nokeep:
    put:
      description: イベントのお気に入り操作
      operationId: user#event fav update#1
      parameters:
      - description: イベントID（連番）
        in: path
        name: eventID
        required: true
        type: integer
      - description: ユーザーID（連番）
        in: query
        name: userID
        required: true
        type: integer
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
      schemes:
      - http
      summary: event fav update user
      tags:
      - user
  /api/v2/user/{genreID}/add:
    put:
      description: ジャンルお気に入り操作
      operationId: user#genre fav update
      parameters:
      - description: genreID（連番）
        in: path
        name: genreID
        required: true
        type: integer
      - description: ユーザーID（連番）
        in: query
        name: userID
        required: true
        type: integer
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
      schemes:
      - http
      summary: genre fav update user
      tags:
      - user
  /api/v2/user/{genreID}/remove:
    put:
      description: ジャンルお気に入り操作
      operationId: user#genre fav update#1
      parameters:
      - description: genreID（連番）
        in: path
        name: genreID
        required: true
        type: integer
      - description: ユーザーID（連番）
        in: query
        name: userID
        required: true
        type: integer
      produces:
      - application/vnd.goa.error
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
      schemes:
      - http
      summary: genre fav update user
      tags:
      - user
  /swagger.json:
    get:
      operationId: swagger#/swagger.json
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - http
      summary: Download public/swagger/swagger.json
  /swagger/{filepath}:
    get:
      operationId: swagger#/swagger/*filepath
      parameters:
      - description: Relative file path
        in: path
        name: filepath
        required: true
        type: string
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
        "404":
          description: File not found
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      summary: Download swagger/dist
produces:
- application/json
- application/xml
- application/gob
- application/x-gob
responses:
  Created:
    description: Created
  NoContent:
    description: No Content
  NotFound:
    description: Not Found
schemes:
- http
swagger: "2.0"
