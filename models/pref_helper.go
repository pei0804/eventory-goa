// Code generated by goagen v1.1.0, command line:
// $ goagen
// --design=github.com/tikasan/eventory-goa/design
// --out=$(GOPATH)
// --version=v1.1.0-dirty
//
// API "eventory": Model Helpers
//
// The content of this file is auto-generated, DO NOT MODIFY

package models

import (
	"../app"
	"github.com/goadesign/goa"
	"github.com/jinzhu/gorm"
	"golang.org/x/net/context"
	"time"
)

// MediaType Retrieval Functions

// ListPref returns an array of view: default.
func (m *PrefDB) ListPref(ctx context.Context) []*app.Pref {
	defer goa.MeasureSince([]string{"goa", "db", "pref", "listpref"}, time.Now())

	var native []*Pref
	var objs []*app.Pref
	err := m.Db.Scopes().Table(m.TableName()).Find(&native).Error

	if err != nil {
		goa.LogError(ctx, "error listing Pref", "error", err.Error())
		return objs
	}

	for _, t := range native {
		objs = append(objs, t.PrefToPref())
	}

	return objs
}

// PrefToPref loads a Pref and builds the default view of media type Pref.
func (m *Pref) PrefToPref() *app.Pref {
	pref := &app.Pref{}
	pref.Name = &m.Name

	return pref
}

// OnePref loads a Pref and builds the default view of media type Pref.
func (m *PrefDB) OnePref(ctx context.Context, id int) (*app.Pref, error) {
	defer goa.MeasureSince([]string{"goa", "db", "pref", "onepref"}, time.Now())

	var native Pref
	err := m.Db.Scopes().Table(m.TableName()).Preload("Events").Preload("UserFollowPrefs").Where("id = ?", id).Find(&native).Error

	if err != nil && err != gorm.ErrRecordNotFound {
		goa.LogError(ctx, "error getting Pref", "error", err.Error())
		return nil, err
	}

	view := *native.PrefToPref()
	return &view, err
}
